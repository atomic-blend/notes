# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)


platform :ios do
  desc "Description of what the lane does"

  lane :test do
      Dir.chdir("../..") do
        sh("fvm flutter test")
      end
  end

  lane :build_beta do
    Dir.chdir("..") do
        sh('fvm flutter build ipa --flavor prod --release -t lib/main_prod.dart --dart-define APP_ENV=prod')
    end
  end

  lane :upload_beta do
     upload_to_testflight(
     api_key_path: "/Users/brandonguigo/appstore_connect_api_key.json",
     app_identifier: "fr.atomicblend.notes",
     ipa: "../build/ios/ipa/Atomic Notes.ipa",
     distribute_external: true,
     notify_external_testers: true,
     submit_beta_review: true,
     skip_waiting_for_build_processing: true,
     changelog: "This release from the Atomic Blend team includes a wide array of updates, minor enhancements, dependency adjustments, and behind-the-scenes improvements, all designed to enhance stability, performance, and overall reliability while continuing to refine and optimize the user experience across the platform.",
     groups: ['beta']
       )
  end

  lane :test_and_beta do
    test
    # add actions here: https://docs.fastlane.tools/actions
    build_beta
    upload_beta
  end
  lane :beta do
    build_beta
    upload_beta
  end
end

platform :android do
    lane :test do
          Dir.chdir("../..") do
            sh("fvm flutter test")
          end
    end

    lane :build_beta do
        Dir.chdir("..") do
            sh('flutter build appbundle --flavor prod --release -t lib/main_prod.dart --dart-define APP_ENV=prod')
            sh('flutter build apk --flavor prod --release -t lib/main_prod.dart --dart-define APP_ENV=prod')
        end
      end

    lane :upload_beta do
        upload_to_play_store(
            package_name: "fr.atomicblend.notes",
            track: "alpha",
            json_key: "../playstore_key.json",
            aab: "../build/app/outputs/bundle/prodRelease/app-prod-release.aab",
            # mapping_paths: ["../build/app/outputs/bundle/prodRelease/native-debug-symbols.zip"]
            )
    end

    lane :test_and_beta do
        test
        # add actions here: https://docs.fastlane.tools/actions
        build_beta
        upload_beta
    end

    lane :beta do
        build_beta
        upload_beta
    end
end

platform :mac do
    lane :test do
        Dir.chdir("../..") do
            sh("fvm flutter test")
        end
    end

    lane :build_prod do
        Dir.chdir("..") do
            sh('fvm flutter build macos --flavor prod --release -t lib/main_prod.dart --dart-define APP_ENV=prod')
        end
    end

    lane :package_dmg do
        Dir.chdir("..") do
           sh("rm -rf macos_dmg/AtomicNotes-latest.dmg")
           sh("TAG=$(git describe --abbrev=0 --tags) rm -rf macos_dmg/AtomicNotes-$TAG.dmg")
           sh("npm install -g appdmg")
           sh("TAG=$(git describe --abbrev=0 --tags) appdmg macos_dmg/config.json macos_dmg/AtomicNotes-$TAG.dmg")
           sh("appdmg macos_dmg/config.json macos_dmg/AtomicNotes-latest.dmg")
        end
    end

    lane :release_prod do
        Dir.chdir("..") do
           build_prod
           package_dmg
        end
    end
end

platform :debian do
    lane :test do
        Dir.chdir("../..") do
            sh("fvm flutter test")
        end
    end

    lane :build_prod do
        Dir.chdir("..") do
            sh('fvm flutter build linux --release -t lib/main_prod.dart --dart-define APP_ENV=prod')
        end
    end

    lane :package_deb do
        Dir.chdir("..") do
            sh("./debian/update_version.sh")
            sh("fvm dart pub global activate flutter_to_debian")
            sh("fvm flutter_to_debian")
        end
    end

    lane :release_prod do
        Dir.chdir("..") do
            build_prod
            package_deb
        end
    end
end

platform :web do
    lane :test do
        Dir.chdir("../..") do
            sh("fvm flutter test")
        end
    end

    lane :build_prod do
        Dir.chdir("..") do
            sh('fvm flutter build web  --release -t lib/main_prod.dart --dart-define APP_ENV=prod')
        end
    end
end

platform :windows do
    lane :test do
        Dir.chdir("../..") do
            sh("fvm flutter test")
        end
    end

    lane :build_prod do
        Dir.chdir("..") do
            sh('flutter build windows --release -t lib/main_prod.dart --dart-define APP_ENV=prod')
        end
    end

    lane :package_deb do
        Dir.chdir("..") do

        end
    end

    lane :release_prod do
        Dir.chdir("..") do
            build_prod
            package_deb
        end
    end
end